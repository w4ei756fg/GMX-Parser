<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>checksum = "&lt;!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!--&gt;";

obj_set[0] = "spriteName";
obj_set[1] = "solid";
obj_set[2] = "visible";
obj_set[3] = "depth";
obj_set[4] = "persistent";
obj_set[5] = "parentName";
obj_set[6] = "maskName";

obj_set[7] = "PhysicsObject";
obj_set[8] = "PhysicsObjectSensor";
obj_set[9] = "PhysicsObjectShape";
obj_set[10] = "PhysicsObjectDensity";
obj_set[11] = "PhysicsObjectRestitution";
obj_set[12] = "PhysicsObjectGroup";
obj_set[13] = "PhysicsObjectLinearDamping";
obj_set[14] = "PhysicsObjectAngularDamping";
obj_set[15] = "PhysicsObjectFriction";
obj_set[16] = "PhysicsObjectAwake";
obj_set[17] = "PhysicsObjectKinematic";

obj_event[0] = "libid";
obj_event[1] = "id";
obj_event[2] = "kind";
obj_event[3] = "userelative";
obj_event[4] = "isquestion";
obj_event[5] = "useapplyto";
obj_event[6] = "exetype";
obj_event[7] = "functionname";
obj_event[8] = "codestring";
obj_event[9] = "whoName";
obj_event[10] = "relative";
obj_event[11] = "isnot";

objSet = ds_list_create();
objEvent[0, 0] = ds_list_create();
objCode[0, 0] = ds_list_create();

objname = "";

/*
one_event.object.gmx
&lt;!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!--&gt;
&lt;object&gt;
  &lt;spriteName&gt;&amp;lt;undefined&amp;gt;&lt;/spriteName&gt;
  &lt;solid&gt;0&lt;/solid&gt;
  &lt;visible&gt;-1&lt;/visible&gt;
  &lt;depth&gt;0&lt;/depth&gt;
  &lt;persistent&gt;0&lt;/persistent&gt;
  &lt;parentName&gt;&amp;lt;undefined&amp;gt;&lt;/parentName&gt;
  &lt;maskName&gt;&amp;lt;undefined&amp;gt;&lt;/maskName&gt;
  &lt;events&gt;
    &lt;event eventtype="0" enumb="0"&gt;
      &lt;action&gt;
        &lt;libid&gt;1&lt;/libid&gt;
        &lt;id&gt;603&lt;/id&gt;
        &lt;kind&gt;7&lt;/kind&gt;
        &lt;userelative&gt;0&lt;/userelative&gt;
        &lt;isquestion&gt;0&lt;/isquestion&gt;
        &lt;useapplyto&gt;-1&lt;/useapplyto&gt;
        &lt;exetype&gt;2&lt;/exetype&gt;
        &lt;functionname&gt;&lt;/functionname&gt;
        &lt;codestring&gt;&lt;/codestring&gt;
        &lt;whoName&gt;self&lt;/whoName&gt;
        &lt;relative&gt;0&lt;/relative&gt;
        &lt;isnot&gt;0&lt;/isnot&gt;
        &lt;arguments&gt;
          &lt;argument&gt;
            &lt;kind&gt;1&lt;/kind&gt;
            &lt;string&gt;//code................&amp;lt;&amp;gt;'"
&lt;/string&gt;
          &lt;/argument&gt;
        &lt;/arguments&gt;
      &lt;/action&gt;
    &lt;/event&gt;
  &lt;/events&gt;
  &lt;PhysicsObject&gt;0&lt;/PhysicsObject&gt;
  &lt;PhysicsObjectSensor&gt;0&lt;/PhysicsObjectSensor&gt;
  &lt;PhysicsObjectShape&gt;0&lt;/PhysicsObjectShape&gt;
  &lt;PhysicsObjectDensity&gt;0.5&lt;/PhysicsObjectDensity&gt;
  &lt;PhysicsObjectRestitution&gt;0.100000001490116&lt;/PhysicsObjectRestitution&gt;
  &lt;PhysicsObjectGroup&gt;0&lt;/PhysicsObjectGroup&gt;
  &lt;PhysicsObjectLinearDamping&gt;0.100000001490116&lt;/PhysicsObjectLinearDamping&gt;
  &lt;PhysicsObjectAngularDamping&gt;0.100000001490116&lt;/PhysicsObjectAngularDamping&gt;
  &lt;PhysicsObjectFriction&gt;0.200000002980232&lt;/PhysicsObjectFriction&gt;
  &lt;PhysicsObjectAwake&gt;-1&lt;/PhysicsObjectAwake&gt;
  &lt;PhysicsObjectKinematic&gt;0&lt;/PhysicsObjectKinematic&gt;
  &lt;PhysicsShapePoints/&gt;
&lt;/object&gt;

*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_green);
for(var i = 0; i &lt; 11; i++)
{
    draw_text(10, 10 + 20 * i, res_name[i] + "res[" + string(i) + "]: " + string(ds_list_size(res_res[i])));
    draw_text(210, 10 + 20 * i, res_name[i] + "path[" + string(i) + "]: " + string(ds_list_size(res_path[i])));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="79">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(vk_control)
{
    var r;
    for(r = string_length(global.filename); r &gt; 0; r--) // group &lt;/tag&gt;
    {
        if string_char_at(global.filename, r) == "\"
        {
            objname = string_copy(global.filename, 1, r - 1);
            break;
        }
    }
    objname = get_open_filename("GameMaker Object files|*.object.gmx", "");
    
    
    if (objname != "")
    {
        //file load
        var file = file_text_open_read(objname), text_l = 0;
        while(!file_text_eof(file))
        {
            text[text_l] = file_text_read_string(file);
            file_text_readln(file);
            text_l++;
        }
        file_text_close(file);
        
        //check correct file
        if (text[0] == checksum)
        {
            //project.gmx parse
            eventtype = -1; // eventtype
            enumb = -1; // enumb
            code = 0; // &lt;string&gt;
            for(var i = 2; i &lt; text_l; i++)
            {
                var current_text = text[i];
                if (eventtype == -1) // object setting
                {
                    for(var r = 0; r &lt; array_height_2d(obj_set); r++)
                    if string_count('&lt;' + obj_set[r] + '&gt;', text[i]) &amp;&amp; string_count('&lt;/' + obj_set[r] + '&gt;', text[i])
                    {
                        ds_list_add(objSet, obj_set[r], string_copy(text[i], string_pos('&lt;' + obj_set[r] + '&gt;', text[i]) + string_length('&lt;' + obj_set[r] + '&gt;'), string_pos('&lt;/' + obj_set[r] + '&gt;', text[i]) - (string_pos('&lt;' + obj_set[r] + '&gt;', text[i]) + string_length('&lt;' + obj_set[r] + '&gt;'))));
                        break;
                    }
                    
                    if string_count('&lt;event eventtype="', text[i]) // event
                    {
                        var pos = string_pos('&lt;event eventtype="', text[i]) + string_length('&lt;event eventtype="');
                        eventtype = string_digits("/" + string_copy(text[i], pos, string_pos('" enumb="', text[i]) - pos));
                    }
                }
                else // code block
                {
                    if string_count('&lt;' + res_name[ropened] + 's name="', text[i]) // group
                    {
                        var pos = string_pos('&lt;' + res_name[ropened] + 's name="', text[i]) + string_length('&lt;' + res_name[ropened] + 's name="');
                        opened += "/" + string_copy(text[i], pos, string_pos('"&gt;', text[i]) - pos);
                    }
                    else if string_count('&lt;' + res_name[ropened] + '&gt;', text[i]) // resource
                    {
                        var pos = string_pos('&lt;' + res_name[ropened] + '&gt;', text[i]) + string_length('&lt;' + res_name[ropened] + '&gt;');
                        var path = string_copy(text[i], pos, string_pos('&lt;/' + res_name[ropened] + '&gt;', text[i]) - pos), rname = path;
                        
                        for(var r = string_length(path); r &gt; 0; r--) // resource name filtering
                        if string_char_at(path, r) == "\"
                        {
                            rname = string_delete(path, 1, r);
                            break;
                        }
                        
                        ds_list_add(res_res[ropened], opened + "/" + rname);
                        ds_list_add(res_path[ropened], path);
                    }
                    else if string_count('&lt;/' + res_name[ropened] + 's&gt;', text[i]) // &lt;/tag&gt;
                    {
                        var r;
                        for(r = string_length(opened); r &gt; 0; r--) // group &lt;/tag&gt;
                        {
                            if string_char_at(opened, r) == "/"
                            {
                                opened = string_copy(opened, 1, r - 1);
                                break;
                            }
                        }
                        if (r == 0)
                            opened = "";
                    }
                }
            }
        }
        else
        {
            show_message("Incorrect file.");
        }
        
        //information display
        project_info();
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
